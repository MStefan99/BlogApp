{"version":3,"sources":["../javascript/validate_form.js"],"names":["form","element","form_element","submit","addEventListener","e","preventDefault","classList","add","validate_all","onkeypress","key","email","querySelector","repeat_email","username","login","new_password","repeat_new_password","required","querySelectorAll","login_msg","email_msg","repeat_email_msg","username_msg","new_password_msg","repeat_new_password_msg","required_msg","contains","forEach","event","check_email","check_email_match","console","log","check_username","check_login","check_password","check_password_match","enable_smart_submit","async","value","trim","replace","innerHTML","username_ok","hasAttribute","re","test","toLowerCase","className","xhr","XMLHttpRequest","onreadystatechange","readyState","status","response","responseText","validate_form","set_color","open","setRequestHeader","send","login_ok","email_ok","email_repeat","email_match_msg","email_match_ok","password","password_msg","ok","new_password_ok","password_repeat","new_password_match_ok","required_ok","Array","from","check_required","remove","elements","style","borderColor","forms","document","getElementsByClassName","f","setup"],"mappings":"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","sourcesContent":["class form {\r\n    // Setting check variables\r\n    form_element;\r\n    email_ok = true;\r\n    email_match_ok = true;\r\n    login_ok = true;\r\n    username_ok = true;\r\n    new_password_ok = true;\r\n    new_password_match_ok = true;\r\n    required_ok = true;\r\n\r\n    constructor(element) {\r\n        this.form_element = element;\r\n    }\r\n\r\n    static set_color(ok, ...elements) {\r\n        elements.forEach((element) => {\r\n            if (!element.value) {\r\n                element.style.borderColor = \"var(--accent-color)\";\r\n            } else if (ok) {\r\n                element.style.borderColor = \"var(--ok)\";\r\n            } else {\r\n                element.style.borderColor = \"var(--error)\";\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    enable_smart_submit() {\r\n        if (this.submit) {\r\n// Disable sending directly by using submit button\r\n            this.submit.addEventListener(\"click\", (e) => {\r\n                e.preventDefault();\r\n                this.submit.classList.add(\"disabled\");\r\n                if (this.validate_all()) {\r\n                    this.form_element.submit();\r\n                }\r\n            });\r\n\r\n\r\n// Disable submitting directly using Enter key\r\n            form.onkeypress = (e) => {\r\n                let key = e.key;\r\n                if (key === \"Enter\") {\r\n                    e.preventDefault();\r\n                    this.submit.classList.add(\"disabled\");\r\n                    if (this.validate_all()) {\r\n                        this.form_element.submit();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    setup() {\r\n//  Input fields\r\n        this.email = this.form_element.querySelector(\"input.email\");\r\n        this.repeat_email = this.form_element.querySelector(\"input.repeat-email\");\r\n        this.username = this.form_element.querySelector(\"input.username\");\r\n        this.login = this.form_element.querySelector(\"input.login\");\r\n        this.new_password = this.form_element.querySelector(\"input.new-password\");\r\n        this.repeat_new_password = this.form_element.querySelector(\"input.repeat-new-password\");\r\n        this.required = this.form_element.querySelectorAll(\"input[required]\");\r\n        this.submit = this.form_element.querySelector(\"button\");\r\n\r\n\r\n// Feedback elements\r\n        this.login_msg = this.form_element.querySelector(\"p.login-check\");\r\n        this.email_msg = this.form_element.querySelector(\"p.email-check\");\r\n        this.repeat_email_msg = this.form_element.querySelector(\"p.email-match-check\");\r\n        this.username_msg = this.form_element.querySelector(\"p.username-check\");\r\n        this.new_password_msg = this.form_element.querySelector(\"p.new-password-check\");\r\n        this.repeat_new_password_msg = this.form_element.querySelector(\"p.repeat-new-password-check\");\r\n        this.required_msg = this.form_element.querySelector(\"p.required-check\");\r\n\r\n\r\n// Setting listeners\r\n\r\n        if (this.email) {\r\n            if (this.email.classList.contains(\"realtime-validate\")) {\r\n                [\"keyup\", \"paste\", \"load\"].forEach((event) => {\r\n                    this.email.addEventListener(event, () => {\r\n                        this.check_email(this.email, this.email_msg);\r\n                    });\r\n                    if (this.repeat_email) {\r\n                        this.email.addEventListener(event, () => {\r\n                            this.check_email_match(this.email, this.repeat_email, this.repeat_email_msg);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"No email field, continuing...\");\r\n        }\r\n\r\n        if (this.repeat_email) {\r\n            if (this.repeat_email.classList.contains(\"realtime-validate\")) {\r\n                [\"keyup\", \"paste\", \"load\"].forEach((event) => {\r\n                    this.repeat_email.addEventListener(event, () => {\r\n                        this.check_email_match(this.email, this.repeat_email, this.repeat_email_msg);\r\n                    });\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"No email-repeat field, continuing...\");\r\n        }\r\n\r\n        if (this.username) {\r\n            if (this.username.classList.contains(\"realtime-validate\")) {\r\n                [\"keyup\", \"paste\", \"load\"].forEach((event) => {\r\n                    this.username.addEventListener(event, () => {\r\n                        this.check_username(this.username, this.username_msg);\r\n                    });\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"No username field, continuing...\");\r\n        }\r\n\r\n        if (this.login) {\r\n            if (this.login.classList.contains(\"realtime-validate\")) {\r\n                [\"keyup\", \"paste\", \"load\"].forEach((event) => {\r\n                    this.login.addEventListener(event, () => {\r\n                        this.check_login(this.login, this.login_msg);\r\n                    });\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"No login field, continuing...\");\r\n        }\r\n\r\n        if (this.new_password) {\r\n            if (this.new_password.classList.contains(\"realtime-validate\")) {\r\n                [\"keyup\", \"paste\", \"load\"].forEach((event) => {\r\n                    this.new_password.addEventListener(event, () => {\r\n                        this.check_password(this.new_password, this.new_password_msg);\r\n                        this.check_password_match(this.new_password,\r\n                            this.repeat_new_password, this.repeat_new_password_msg);\r\n                    });\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"No new-password field, continuing...\");\r\n        }\r\n\r\n        if (this.repeat_new_password) {\r\n            if (this.repeat_new_password.classList.contains(\"realtime-validate\")) {\r\n                [\"keyup\", \"paste\", \"load\"].forEach((event) => {\r\n                    this.repeat_new_password.addEventListener(event, () => {\r\n                        this.check_password_match(this.new_password,\r\n                            this.repeat_new_password, this.repeat_new_password_msg);\r\n                    });\r\n                });\r\n            }\r\n        } else {\r\n            console.log(\"No repeat-new-password field, continuing...\");\r\n        }\r\n        this.enable_smart_submit();\r\n    }\r\n\r\n//Check functions\r\n    check_username(username, username_msg, async = true) {\r\n        username.value = username.value.trim().replace(/\\s+/g, '');\r\n        if (!username.value.trim()) {\r\n            username_msg.innerHTML = \"\";\r\n            this.username_ok = !username.hasAttribute('required');\r\n        } else {\r\n            let re = /^(?=.*[a-zA-Z]+)[0-9a-zA-Z\\-_.]{3,100}$/;\r\n            this.username_ok = re.test(username.value.toLowerCase());\r\n            if (!this.username_ok) {\r\n                username_msg.className = \"credentials-check error\";\r\n                username_msg.innerHTML = \"Your username must be at least 3 symbols long \" +\r\n                    \"and include only letters, numbers or characters \\\"-\\\", \\\"_\\\" and \\\".\\\". Spaces not allowed.\";\r\n            } else {\r\n                let xhr = new XMLHttpRequest();\r\n                xhr.onreadystatechange = () => {\r\n                    if (xhr.readyState === 4 && xhr.status === 200) {\r\n                        let response = xhr.responseText;\r\n                        switch (response) {\r\n                            case 'OK':\r\n                                username_msg.className = \"credentials-check ok\";\r\n                                username_msg.innerHTML = \"Username is free\";\r\n                                break;\r\n                            case 'ALREADY EXISTS':\r\n                                username_msg.className = \"credentials-check error\";\r\n                                username_msg.innerHTML = \"Username is already taken!\";\r\n                                break;\r\n                            default:\r\n                                username_msg.innerHTML = \"\";\r\n                        }\r\n                        this.username_ok = response === \"OK\";\r\n\r\n                        this.validate_form();\r\n                        form.set_color(this.username_ok, username);\r\n                    }\r\n                };\r\n\r\n                xhr.open(\"POST\", \"/check_username/\", async);\r\n                xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n                xhr.send(\"username=\" + username.value);\r\n            }\r\n\r\n        }\r\n        this.validate_form();\r\n        form.set_color(this.username_ok, username);\r\n    }\r\n\r\n    check_login(login, login_msg, async = true) {\r\n        login.value = login.value.trim().replace(/\\s+/g, '');\r\n        if (!login.value.trim()) {\r\n            login_msg.innerHTML = \"\";\r\n            this.login_ok = !login.hasAttribute('required');\r\n        } else {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4 && xhr.status === 200) {\r\n                    let response = xhr.responseText;\r\n                    switch (response) {\r\n                        case 'OK':\r\n                            login_msg.className = \"credentials-check ok\";\r\n                            login_msg.innerHTML = \"User found\";\r\n                            break;\r\n                        case 'NOT FOUND':\r\n                            login_msg.className = \"credentials-check error\";\r\n                            login_msg.innerHTML = \"User not found!\";\r\n                            break;\r\n                        default:\r\n                            login_msg.innerHTML = \"\";\r\n                    }\r\n\r\n                    this.login_ok = response === \"OK\";\r\n                    this.validate_form();\r\n                    form.set_color(this.login_ok, login);\r\n                }\r\n            };\r\n\r\n            xhr.open(\"POST\", \"/check_login/\", async);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n            xhr.send(\"login=\" + login.value);\r\n        }\r\n        this.validate_form();\r\n        form.set_color(this.login_ok, login);\r\n    }\r\n\r\n    check_email(email, email_msg, async = true) {\r\n        email.value = email.value.trim().replace(/\\s+/g, '');\r\n        if (!email.value) {\r\n            email_msg.innerHTML = \"\";\r\n            this.email_ok = !email.hasAttribute('required');\r\n        } else {\r\n            let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"][\\w]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"][\\w]+)*)|(\"\\w+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            this.email_ok = re.test(email.value.toLowerCase());\r\n            if (!this.email_ok) {\r\n                email_msg.className = \"credentials-check error\";\r\n                email_msg.innerHTML = \"Invalid email format\";\r\n            } else {\r\n                let xhr = new XMLHttpRequest();\r\n                xhr.onreadystatechange = () => {\r\n                    if (xhr.readyState === 4 && xhr.status === 200) {\r\n                        let response = xhr.responseText;\r\n                        switch (response) {\r\n                            case 'OK':\r\n                                email_msg.className = \"credentials-check ok\";\r\n                                email_msg.innerHTML = \"Email is free\";\r\n                                break;\r\n                            case 'ALREADY EXISTS':\r\n                                email_msg.className = \"credentials-check error\";\r\n                                email_msg.innerHTML = \"Email is already taken!\";\r\n                                break;\r\n                            default:\r\n                                email_msg.innerHTML = \"\";\r\n                        }\r\n\r\n                        this.email_ok = response === \"OK\";\r\n\r\n                        this.validate_form();\r\n                        form.set_color(this.email_ok, email);\r\n                    }\r\n                };\r\n                xhr.open(\"POST\", \"/check_email/\", async);\r\n                xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n                xhr.send(\"email=\" + email.value);\r\n            }\r\n        }\r\n        this.validate_form();\r\n        form.set_color(this.email_ok, email);\r\n    }\r\n\r\n    check_email_match(email, email_repeat, email_match_msg) {\r\n        if (!email.value && email.hasAttribute('required') &&\r\n            !email_repeat.value && email_repeat.hasAttribute('required')) {\r\n            this.email_match_ok = false;\r\n        } else if (email.value !== email_repeat.value) {\r\n            email_match_msg.innerHTML = \"Emails do not match\";\r\n            email_match_msg.className = \"credentials-check error\";\r\n            this.email_match_ok = false;\r\n        } else {\r\n            email_match_msg.innerHTML = \"\";\r\n            this.email_match_ok = true;\r\n        }\r\n        this.validate_form();\r\n        form.set_color(this.email_match_ok, email, email_repeat);\r\n    }\r\n\r\n    check_password(password, password_msg) {\r\n        let re = /^(?=.*[a-zA-Z]+)(?=.*[0-9]+)[0-9a-zA-Z!@#$%^&*(){}\\[\\]\\-_=+,.<>|\\\\]{8,100}$/;\r\n        var ok = re.test(password.value.toLowerCase());\r\n        if (!ok) {\r\n            password_msg.className = \"credentials-check error\";\r\n            password_msg.innerHTML = \"Your password must be at least 8 characters long \" +\r\n                \"and include at least one letter and one number. Spaces not allowed.\";\r\n        } else {\r\n            password_msg.innerHTML = \"\";\r\n        }\r\n        this.new_password_ok = ok;\r\n        this.validate_form();\r\n        form.set_color(this.new_password_ok, password);\r\n    }\r\n\r\n    check_password_match(password, password_repeat, password_msg) {\r\n        if (!password.value && password.hasAttribute('required') &&\r\n            !password_repeat.value && password_repeat.hasAttribute('required')) {\r\n            password_msg.innerHTML = \"\";\r\n            this.new_password_match_ok = false;\r\n        } else if (!password.value.trim() && !password_repeat.value.trim()) {\r\n            password_msg.innerHTML = \"\";\r\n        } else if (password.value !== password_repeat.value) {\r\n            password_msg.innerHTML = \"Passwords do not match\";\r\n            password_msg.className = \"credentials-check error\";\r\n            this.new_password_match_ok = false;\r\n        } else if (password.value === password_repeat.value) {\r\n            password_msg.innerHTML = \"Passwords match\";\r\n            password_msg.className = \"credentials-check ok\";\r\n            this.new_password_match_ok = true;\r\n        }\r\n        this.validate_form();\r\n        form.set_color(this.new_password_ok, password);\r\n        form.set_color(this.new_password_match_ok, password_repeat);\r\n    }\r\n\r\n    check_required(required_msg) {\r\n        this.required_ok = true;\r\n        if (this.required_msg) {\r\n            required_msg.innerHTML = \"\";\r\n        }\r\n        Array.from(this.required).forEach((element) => {\r\n            if (!element.value) {\r\n                this.required_ok = false;\r\n                required_msg.innerHTML = \"Please fill in all required fields\";\r\n                required_msg.className = \"credentials-check error\";\r\n                form.set_color(this.required_ok, element);\r\n            }\r\n        });\r\n        this.validate_form();\r\n    }\r\n\r\n    validate_all() {\r\n        if (this.username) {\r\n            this.check_username(this.username, this.username_msg, false);\r\n        }\r\n        if (this.login) {\r\n            this.check_login(this.login, this.login_msg, false);\r\n        }\r\n        if (this.email) {\r\n            this.check_email(this.email, this.email_msg, false);\r\n        }\r\n        if (this.repeat_email) {\r\n            this.check_email_match(this.email, this.repeat_email, this.repeat_email_msg);\r\n        }\r\n        if (this.new_password) {\r\n            this.check_password(this.new_password, this.new_password_msg);\r\n        }\r\n        if (this.new_password && this.repeat_new_password) {\r\n            this.check_password_match(this.new_password, this.repeat_new_password, this.repeat_new_password_msg);\r\n        }\r\n        if (this.required) {\r\n            this.check_required(this.required_msg);\r\n        }\r\n        // Enabling or disabling form submission\r\n        var ok = this.email_ok && this.email_match_ok && this.username_ok && this.login_ok && this.new_password_match_ok && this.required_ok;\r\n        if (!ok) {\r\n            this.submit.classList.add(\"disabled\");\r\n        } else {\r\n            this.submit.classList.remove(\"disabled\");\r\n        }\r\n        return ok;\r\n    }\r\n\r\n    // Enabling or disabling form submission\r\n    validate_form() {\r\n        if (this.email_ok && this.email_match_ok && this.username_ok && this.login_ok && this.new_password_match_ok && this.required_ok) {\r\n            this.submit.classList.remove(\"disabled\");\r\n            return false;\r\n        } else {\r\n            this.submit.classList.add(\"disabled\");\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet forms = document.getElementsByClassName(\"validated\");\r\nArray.from(forms).forEach((f) => {\r\n    f = new form(f);\r\n    f.setup();\r\n});"],"file":"validate_form.js"}